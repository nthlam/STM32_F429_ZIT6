/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/selecthardwarescreen_screen/SelectHardwareScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

SelectHardwareScreenViewBase::SelectHardwareScreenViewBase() :
    flexButtonCallback(this, &SelectHardwareScreenViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SELECTHARDWARE_ID));
    add(image1);

    playWithButton.setBoxWithBorderPosition(0, 0, 150, 30);
    playWithButton.setBorderSize(5);
    playWithButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    playWithButton.setAlpha(40);
    playWithButton.setAction(flexButtonCallback);
    playWithButton.setPosition(45, 236, 150, 30);
    add(playWithButton);

    playWithLoadcell.setBoxWithBorderPosition(0, 0, 150, 30);
    playWithLoadcell.setBorderSize(5);
    playWithLoadcell.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    playWithLoadcell.setAlpha(40);
    playWithLoadcell.setAction(flexButtonCallback);
    playWithLoadcell.setPosition(45, 198, 150, 30);
    add(playWithLoadcell);
}

SelectHardwareScreenViewBase::~SelectHardwareScreenViewBase()
{

}

void SelectHardwareScreenViewBase::setupScreen()
{

}

void SelectHardwareScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &playWithLoadcell)
    {
        //playwithloadcell
        //When playWithLoadcell clicked change screen to LoadcellScreen
        //Go to LoadcellScreen with no screen transition
        application().gotoLoadcellScreenScreenNoTransition();
    }
    if (&src == &playWithButton)
    {
        //playwithbutton
        //When playWithButton clicked change screen to ButtonScreen
        //Go to ButtonScreen with no screen transition
        application().gotoButtonScreenScreenNoTransition();
    }
}
