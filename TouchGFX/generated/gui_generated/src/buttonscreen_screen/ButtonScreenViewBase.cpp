/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/buttonscreen_screen/ButtonScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ButtonScreenViewBase::ButtonScreenViewBase() :
    flexButtonCallback(this, &ButtonScreenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &ButtonScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    playButtImg.setXY(0, 0);
    playButtImg.setBitmap(touchgfx::Bitmap(BITMAP_BUTTONSCREEN_ID));
    add(playButtImg);

    retryButt1.setBoxWithBorderPosition(0, 0, 70, 25);
    retryButt1.setBorderSize(5);
    retryButt1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    retryButt1.setAlpha(40);
    retryButt1.setAction(flexButtonCallback);
    retryButt1.setPosition(160, 142, 70, 25);
    add(retryButt1);

    pauseButt1.setBoxWithBorderPosition(0, 0, 70, 25);
    pauseButt1.setBorderSize(5);
    pauseButt1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    pauseButt1.setAlpha(40);
    pauseButt1.setAction(flexButtonCallback);
    pauseButt1.setPosition(10, 142, 70, 25);
    add(pauseButt1);

    highscorebutt.setPosition(5, 109, 80, 25);
    highscorebutt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    highscorebutt.setLinespacing(0);
    Unicode::snprintf(highscorebuttBuffer, HIGHSCOREBUTT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5NLL).getText());
    highscorebutt.setWildcard(highscorebuttBuffer);
    highscorebutt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W3U5));
    add(highscorebutt);

    scorebutt.setPosition(155, 109, 80, 25);
    scorebutt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    scorebutt.setLinespacing(0);
    Unicode::snprintf(scorebuttBuffer, SCOREBUTT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I0IC).getText());
    scorebutt.setWildcard(scorebuttBuffer);
    scorebutt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HG08));
    add(scorebutt);

    image1.setXY(117, 299);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_HIGHSTRIKER_CURSOR_ID));
    add(image1);

    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_HIGHSTRIKERPOPUP_ID), 0, 0);
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    modalWindow1.setShadeAlpha(105);
    modalWindow1.hide();
    headerText.setXY(45, 77);
    headerText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    headerText.setLinespacing(0);
    headerText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q7ZN));
    headerText.setVisible(false);
    modalWindow1.add(headerText);

    ready.setXY(93, 143);
    ready.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    ready.setLinespacing(0);
    ready.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NMUH));
    ready.setVisible(false);
    modalWindow1.add(ready);

    strike.setXY(75, 143);
    strike.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    strike.setLinespacing(0);
    strike.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SD20));
    strike.setVisible(false);
    modalWindow1.add(strike);

    set.setXY(104, 143);
    set.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    set.setLinespacing(0);
    set.setWideTextAction(WIDE_TEXT_WORDWRAP_ELLIPSIS);
    set.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SLNW));
    set.setVisible(false);
    modalWindow1.add(set);

    readyButton.setXY(65, 219);
    readyButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_NORMAL_ID));
    readyButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_6Y7Z));
    readyButton.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    readyButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    readyButton.setVisible(false);
    readyButton.setAction(buttonCallback);
    modalWindow1.add(readyButton);

    add(modalWindow1);
}

ButtonScreenViewBase::~ButtonScreenViewBase()
{

}

void ButtonScreenViewBase::setupScreen()
{

}

void ButtonScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &pauseButt1)
    {
        //pausebuttchange
        //When pauseButt1 clicked change screen to PauseScreen
        //Go to PauseScreen with no screen transition
        application().gotoPauseScreenScreenNoTransition();
    }
    if (&src == &retryButt1)
    {
        //retryButtonChance
        //When retryButt1 clicked call virtual function
        //Call retryButtonClicked
        retryButtonClicked();
    }
}

void ButtonScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &readyButton)
    {
        //readyButtonChance
        //When readyButton clicked call virtual function
        //Call readyButtonClicked
        readyButtonClicked();
    }
}
