/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LOADCELLSCREENVIEWBASE_HPP
#define LOADCELLSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/loadcellscreen_screen/LoadcellScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class LoadcellScreenViewBase : public touchgfx::View<LoadcellScreenPresenter>
{
public:
    LoadcellScreenViewBase();
    virtual ~LoadcellScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image playLcImg;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  retryButt2;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  pauseButt2;
    touchgfx::TextAreaWithOneWildcard highscorelc;
    touchgfx::TextAreaWithOneWildcard scorelc;

    /*
     * Wildcard Buffers
     */
    static const uint16_t HIGHSCORELC_SIZE = 25;
    touchgfx::Unicode::UnicodeChar highscorelcBuffer[HIGHSCORELC_SIZE];
    static const uint16_t SCORELC_SIZE = 25;
    touchgfx::Unicode::UnicodeChar scorelcBuffer[SCORELC_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<LoadcellScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // LOADCELLSCREENVIEWBASE_HPP
